% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/rank_plot.R
\name{rank_plot}
\alias{rank_plot}
\title{Plotting Change of Ranks of a Categorical Variable to an Index}
\usage{
rank_plot(dataframe,ctg.idx,num.idx,condition.idx,criteria,top_N,colors,
                 yaxis_name,title,...)
}
\arguments{
\item{...}{other parameters for plotting, mainly layout options.
See "Details" and \code{\link[plotly]{layout}} for more information}

\item{dataframe:}{a dataframe object}

\item{ctg.idx:}{a character or an integer, indicate which column will be selected as the
variable to show in x axis}

\item{num.idx:}{a vector of character or an integer, indicate which column(s)
will be selected as the variable to show in y axis}

\item{condition.idx:}{a character or an integre, indicate which column will be treated as
the legend name. See "Details" for more information}

\item{criteria:}{a character or a numeric, depend on the class of element of
the column specified by ctg.idx. See "Details" for more information}

\item{top_N:}{a integer, if there are too many categories in the legend,
use this argument to choose the top n levels with respect to criteria.
See "Details" for more information}

\item{colors:}{a vector, the palette used for plotting}

\item{yaxis_name:}{name of y axis}

\item{title:}{the the title of the plot}
}
\value{
This function will return an object of class plotly. By calling the function you
will get a line plot of multiple categorical variables' rank to an specified index.
}
\description{
\code{rank_plot} gives a plot of ranks for a categorical variable. The function makes
it clear to see the trend of each category and how their relations change.
}
\details{
This function plot ranks of different category, no matter which format your data is.
If you have dataframe with a column serves as index, one as the numeric to display,
and another one as categories. Then plug them into this function, you will generate
a line plot with each line represent the rank change of a category over index.
Or if you dataframe contains multiple numeric columns, just leave condition.idx missing
and the function will give a line plot with each line represent the rank change of each
numeric column you selected. "criteria" is used to decide at which particular index
will the top_N selection been done. While if there are too many categories
you can use "top_N" to subset only the top N categories with biggest numerical value
with respect to criteria to be used in the plot. Some unlisted option is also available,
such as xaxis, paper_bgcolor and margin.
See \code{\link[plotly]{layout}} for more information.
}
\examples{
data("estate_fin_charts")
rank_plot(dataframe=estate_fin_charts,ctg.idx = 'Year',num.idx = 'margin',
          condition.idx = '证券简称',criteria=2016,top_N=5,
          colors=brewer.pal(5,'Set1'),
          yaxis_name='利润排名',
          title='2016年利润排名前5的房地产企业历年排名变化',
          paper_bgcolor='#ccece6',margin=list(t=36,l=24))
\dontrun{
## the following code will generate warnings saying that there are only 6 linetypes
## but the function have taken good care of linetypes by sample with replacement
## Don't worry, just ignore those warnings
rank_plot(dataframe=estate_fin_charts,ctg.idx = 'Year',num.idx = 'income',
          condition.idx = '证券简称',criteria=2016,top_N=12,
          colors=brewer.pal(12,'Set3'),
          yaxis_name='营收排名',
          title='2016年营收排名前5的房地产企业历年排名变化',
          paper_bgcolor='#ccece6',margin=list(t=36,l=24))
}
data("macro_data_chn")
test_df = macro_data_chn
test_df[1:3,9] <- NA
rank_plot(dataframe=test_df,ctg.idx='year',num.idx=c(9:12),
          criteria = 2016,colors = brewer.pal(4,'Set1'),
          yaxis_name = '商品价格排名',
          title='一些大宗商品的历年价格排名',
          xaxis = list(showgrid=T,nticks=5,ticklen=4,tickangle=-45,
                       ticks='outside',tickmode="auto",
                       type='category',title="年份"),
          paper_bgcolor='#ccece6',margin=list(t=36,l=24))

}
\seealso{
\code{\link[plotly]{plot_ly}},\code{\link[plotly]{layout}}
}
\author{
Jizhou Kang <jizhou_kang@hotmail.com>
}
