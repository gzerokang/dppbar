% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/donut_plot.R
\name{donut_plot}
\alias{donut_plot}
\title{Donut Plot to Show Percentage}
\usage{
donut_plot(dataframe,ctg.idx,num.idx,condition,condition.idx,
                  colors,hole_size=0.5,title,legendOn=TRUE,...)
}
\arguments{
\item{...}{other parameters to draw the plot, usually "paper_bgcolor" or "margin" in
\code{\link[plotly]{layout}}. See "Details" for more information}

\item{dataframe:}{a dataframe object}

\item{ctg.idx:}{a character or an integer, indicate which column will be selected as the
categorical variable for each part of the pie}

\item{num.idx:}{a character or an integer, indicate which column will be selected as the
numerical variable to determine percentage}

\item{condition:}{a vector, indicate how to select part of the dataframe}

\item{condition.idx:}{a character or an integer, indicate which column is the condition in.}

\item{colors:}{a vector, the Palette that will be used to draw the graph}

\item{hole_size:}{a numeric, the size of the hole on the center of the original pie plot,
default to 0.5}

\item{title:}{a string, title of the plot}

\item{legendOn:}{a logical, how should the name of each category displayed, default to TRUE.
See "Details" for more information}
}
\value{
This function will return an object of class plotly. By calling the function you
will get a donut plot (pie plot with a hole on the center).
}
\description{
Percentage of certain categorical variable is essential in data analysis. \code{donut_plot}
makes a fancy plot based on pie plot that can clearly show percentage.
}
\details{
If "legendOn" is set to TRUE, then there will be a legend indicate the map between
categorical variable's level and color. Otherwise the name of each categorical variable
will be shown as annotations on the plot. You can specify margin to avoid lose of
information because of the boundary of graph.
}
\examples{
data("machinery_fin_charts")
donut_plot(dataframe=machinery_fin_charts,ctg.idx="分类",num.idx='主营业务收入',
           condition=2017,condition.idx='年份',
           colors=c("#8DD3C7", "#FFFFB3", "#BEBADA", "#FB8072",
                    "#80B1D3" ,"#FDB462", "#B3DE69"),
           title='机械行业营收构成（2017）',legendOn=FALSE,paper_bgcolor='#ccece6')
## another kind, here we use margin to make annotations showed fully
data("dairy_fin_charts")
donut_plot(dataframe=dairy_fin_charts,ctg.idx="name",num.idx='income',
           condition=2017,condition.idx='Year',colors = "",
           title='乳制品企业市场份额（2017）',legendOn=TRUE,
           paper_bgcolor='#ccece6',margin=list(t=30,b=72))
}
\seealso{
\code{\link[plotly]{plot_ly}},\code{\link[plotly]{add_pie}},
\code{\link[plotly]{layout}}
}
