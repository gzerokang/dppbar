% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/bar_plot.R
\name{bar_plot}
\alias{bar_plot}
\title{Bar Plot of Different Categories}
\usage{
bar_plot(dataframe,ctg.idx,num.idx,condition.idx,criteria,top_N,colors,
                 xaxis_name,yaxis_name,title,...)
}
\arguments{
\item{...}{other parameters for plotting, mainly layout options.
See "Details" and \code{\link[plotly]{layout}} for more information}

\item{dataframe:}{a dataframe object}

\item{ctg.idx:}{a character or an integer, indicate which column will be selected as the
variable to show in x axis}

\item{num.idx:}{a vector of character or an integer, indicate which column(s)
will be selected as the variable to show in y axis}

\item{condition.idx:}{a character or an integre, indicate which column will be treated as
the legend name. See "Details" for more information}

\item{criteria:}{a character or a numeric, depend on the class of element of
the column specified by ctg.idx. See "Details" for more information}

\item{top_N:}{a integer, if there are too many categories in the legend,
use this argument to choose the top n levels with respect to criteria.
See "Details" for more information}

\item{colors:}{a vector, the palette used for plotting}

\item{xaxis_name:}{name of x axis}

\item{yaxis_name:}{name of y axis}

\item{title:}{the the title of the plot}
}
\value{
This function will return an object of class plotly. By calling the function you
will get a bar plot of multiple categorical variables with respect to an specified index.
}
\description{
Bar plots is very common in data visualization. \code{bar_plot} makes grouped bar plot
with manipulated data.
}
\details{
This function makes it easier to draw bar plot no matter which format your data have.
If you have dataframe with a column serves as index, one as the numeric to display,
and another one as categories. Then by plug in this function, you will generate
a bar plot with categories serves as legend. Or if you dataframe contains multiple
numeric columns, then just leave condition.idx missing and the function will use column
names of your numeric columns as legend. "criteria" is used to decide the order of bars
for each categories and if there are too many of them you can use "top_N" which
select the top N categories with biggest numerical value with respect to criteria.
Some unlisted option can be take into the function, such as paper_bgcolor and
margin. See \code{\link[plotly]{layout}} for more information.
}
\examples{
data("estate_fin_charts")
bar_plot(dataframe=estate_fin_charts,ctg.idx = 'Year',num.idx = 'income',
         condition.idx = '证券简称',criteria=2016,top_N=12,
         colors=RColorBrewer::brewer.pal(12,'Set3'),
         xaxis_name='年份',yaxis_name='营业收入（亿元）',
         title='2016年营业收入前12名房地产企业历年营收变化',
         paper_bgcolor='#ccece6',margin=list(t=36,l=24))
## another example, where condition.idx is missing
data("macro_data_chn")
bar_plot(dataframe=macro_data_chn,ctg.idx='year',num.idx=c(9:12),
         criteria = 2016,colors = RColorBrewer::brewer.pal(4,'Set1'),
         xaxis_name = '年份',yaxis_name = '商品价格（元/吨）',
         title='一些大宗商品的历年价格变化',
         paper_bgcolor='#ccece6',margin=list(t=36,l=24))
}
\seealso{
\code{\link[ggplot2]{geom_bar}}, \code{\link[ggplot2]{ggplot}},
\code{\link[plotly]{layout}}
}
\author{
Jizhou Kang <jizhou_kang@hotmail.com>
}
