% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/label_bar_plot.R
\name{label_bar_plot}
\alias{label_bar_plot}
\title{Labeled Bar Plot}
\usage{
static_bar_plot(dataframe,ctg.idx,num.idx,condition.idx,
                       criteria,top_N,colors,xaxis_name,title,
                       paper_bgcolor='#f2f2f2')
}
\arguments{
\item{dataframe:}{a dataframe object}

\item{ctg.idx:}{a character or an integer, indicate which column will be selected as the
criteria to select part of the data}

\item{num.idx:}{a vector of character or an integer, indicate which column(s)
will be selected as the numerical variable (x axis in the plot)}

\item{condition.idx:}{a character or an integer, indicate which column will be treated as
the categorical variable (y axis in the plot)}

\item{criteria:}{a character or a numeric, depend on the class of element of
the column specified by ctg.idx. See "Details" for more information}

\item{top_N:}{a integer, if there are too many categories in the legend,
use this argument to choose the top n levels with respect to criteria.
See "Details" for more information}

\item{colors:}{a vector or a character, the palette used for plotting}

\item{xaxis_name:}{name of x axis}

\item{title:}{name of the plot}

\item{paper_bgcolor:}{background color of the whole plot, default to "#f2f2f2"}
}
\value{
This function will return an object of class ggplot. By calling the function you
will get a bar plot of a numerical variables with respect to an categorical variable.
}
\description{
\code{label_bar_plot} plot a categorical variable verses a numerical variable, with a
small tag on the right side of each bar indiciting the value of each bar.
}
\details{
This function makes simple but fancy bar plot by adding a small tag to the right side
of the bar. It can deal with multiple type of data, no matter how numerical variables are
organized. If there are to much to show, it also enables you to select part of the data
by specify criteria. If you have a cross-section data, which means that there's no
variable that can be choosen as the ctg.idx and criteria. Then you can simply add
a column to the dataframe, with the same element, and set ctg.idx as the column index or
column name of the new column, while set criteria as the unique element of that column.
}
\examples{
data("estate_fin_charts")
label_bar_plot(dataframe=estate_fin_charts,ctg.idx='Year',num.idx='roa',
                condition.idx = '证券简称',criteria=2016,top_N=10,colors='#377EB8',
                xaxis_name = 'ROA',title='房地产企业2016年ROA排名前十企业')
data("macro_data_chn")
label_bar_plot(dataframe=macro_data_chn,ctg.idx='year',num.idx=c(9:12),
                criteria=2016,colors=brewer.pal(4,'Set1'),
                xaxis_name = '价格（元/吨）',title='大宗商品商品2016年价格',
                paper_bgcolor = '#ccece6')
## deal with cross-section data
## a silly example but illustrate the idea
test_df=estate_fin_charts\%>\%filter(Year==2016)\%>\%select(证券简称,income)
## if this test_df is the data you have
## you can generate a labeled bar plot by the following method
test_df$Year=2016
label_bar_plot(dataframe=estate_fin_charts,ctg.idx='Year',num.idx='roa',
               condition.idx = '证券简称',criteria=2016,top_N=10,colors='#377EB8',
               xaxis_name = 'ROA',title='房地产企业2016年ROA排名前十企业',
               paper_bgcolor='#ccece6')
}
\seealso{
\code{\link[ggplot2]{geom_bar}}, \code{\link[ggplot2]{theme}}
}
\author{
Jizhou Kang <jizhou_kang@hotmail.com>
}
